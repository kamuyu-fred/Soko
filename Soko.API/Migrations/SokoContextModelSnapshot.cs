// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Soko.API.Data;

#nullable disable

namespace Soko.API.Migrations
{
    [DbContext(typeof(SokoContext))]
    partial class SokoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("Soko.API.Entities.BuyTransaction", b =>
                {
                    b.Property<int>("BTId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BTQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BuyTransactionDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TBuyPrice")
                        .HasColumnType("TEXT");

                    b.Property<int>("TProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TVendorName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("BTId");

                    b.ToTable("BuyTransactions");
                });

            modelBuilder.Entity("Soko.API.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Foods"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Kitchen"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Electronics"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Toys"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Fruits"
                        });
                });

            modelBuilder.Entity("Soko.API.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("CustomerAddedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerLocation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Soko.API.Entities.POSBuy", b =>
                {
                    b.Property<int>("PBTId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PBTQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PBuyTransactionDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PTBuyPrice")
                        .HasColumnType("TEXT");

                    b.Property<int>("PTProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PTProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PTVendorName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PBTId");

                    b.ToTable("POSBuy");
                });

            modelBuilder.Entity("Soko.API.Entities.POSSell", b =>
                {
                    b.Property<int>("PSTId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PSTQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PSellTransactionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PTCustomerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PTProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PTProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PTSellPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("PSTId");

                    b.ToTable("POSSell");
                });

            modelBuilder.Entity("Soko.API.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("AddedDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("BuyPrice")
                        .HasColumnType("TEXT");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("SellPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Soko.API.Entities.SellTransaction", b =>
                {
                    b.Property<int>("STId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("STQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("SellTransactionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("TCustomerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TSellPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("STId");

                    b.ToTable("SellTransactions");
                });

            modelBuilder.Entity("Soko.API.Entities.Vendor", b =>
                {
                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("VendorAddedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("VendorLocation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VendorPhone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("VendorId");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("Soko.API.Entities.Product", b =>
                {
                    b.HasOne("Soko.API.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
